@using Store.Models
@model ProductsListViewModel


<div class="set-proposals">
    <div class="head">
        <div class="holder article">
            <h1>@Model.CurrentCategory</h1>
        </div>
        <div class="sorting">
            <strong>Sort:</strong>
            <ul>
                <li>
                    <a asp-action="List"
                       asp-route-sortOrder="@(Store.Models.SortState.PriceAsc)"
                       asp-route-category="@(Model.CurrentCategory)">
                        <span>low price</span>
                    </a>
                </li>
                <li>
                    <a asp-action="List"
                       asp-route-sortOrder="@(Store.Models.SortState.PriceDesc)"
                       asp-route-category="@(Model.CurrentCategory)">
                        <span>high price</span>
                    </a>
                </li>
            </ul>
        </div>
    </div>

    <ul class="list">
        @foreach (var p in Model.Products)
        {
            @Html.Partial("ProductSummary", p)
        }
    </ul>

    <div page-model="@Model.PagingInfo" page-action="List" page-classes-enabled="true"
         page-class="btn" page-class-normal="btn-secondary"
         page-class-selected="btn-primary" page-url-category="@Model.CurrentCategory"
         class="pagination justify-content-center">
    </div>
</div>


